Foreach method is available in iterables, so the list can be iterated as list.foreach(consumable<T>)
Implementation in interface method can be done using default or static keyword before return type. limitation: this cannot override methods in Object Type of JAVA
Lambda Expresssions to instantiate functional interfaces and streams processing
Streams are used to process bulk data fast ,either sequential or parallel.
Date&Time API - LocalDateTime,ZonedDateTime,Chrono Units,Temporal Adjustments,Period & Duration between two dates,backward compatability for getting java 8 objects
Collection API improvements : iterator.forEachRemaining , removeIf(Predicate filter) ,Collection.spliterator() ,Map replaceAll(), compute(), merge() methods,Performance Improvement for HashMap class with Key Collisions

Concurrency API improvements

    ConcurrentHashMap compute(), forEach(), forEachEntry(), forEachKey(), forEachValue(), merge(), reduce() and search() methods.
    CompletableFuture that may be explicitly completed (setting its value and status).
    Executors newWorkStealingPool() method to create a work-stealing thread pool using all available processors as its target parallelism level
    
    
Java IO improvements

    Files.list(Path dir) that returns a lazily populated Stream, the elements of which are the entries in the directory.
    Files.lines(Path path) that reads all lines from a file as a Stream.
    Files.find() that returns a Stream that is lazily populated with Path by searching for files in a file tree rooted at a given starting file.
    BufferedReader.lines() that return a Stream, the elements of which are lines read from this BufferedReader.
    
    
Miscellaneous Core API improvements

Some misc API improvements that might come handy are:

    ThreadLocal static method withInitial(Supplier supplier) to create instance easily.
    Comparator interface has been extended with a lot of default and static methods for natural ordering, reverse order etc.
    min(), max() and sum() methods in Integer, Long and Double wrapper classes.
    logicalAnd(), logicalOr() and logicalXor() methods in Boolean class.
    ZipFile.stream() method to get an ordered Stream over the ZIP file entries. Entries appear in the Stream in the order they appear in the central directory of the ZIP file.
    Several utility methods in Math class.
    jjs command is added to invoke Nashorn Engine.
    jdeps command is added to analyze class files
    JDBC-ODBC Bridge has been removed.
    PermGen memory space has been removed



Reference : http://www.journaldev.com/2389/java-8-features-with-examples